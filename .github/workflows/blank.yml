# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
 build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    strategy:
      matrix:
        repo: ['Yam-Carrasco/bff-back-end']
    timeout-minutes: 5
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install robotframework-faker
          pip install robotframework-requests

          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /usr/share/keyrings/google-chrome-keyring.gpg
          echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt update -y
          sudo apt install -y gconf-service libasound2 libatk1.0-0 libcairo2 libcups2 libfontconfig1 libgdk-pixbuf2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libxss1 fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils
          sudo apt install -y google-chrome-stable
          
      - name: Run Selenium tests
        run: |
          #robot -d ./Results ./tests/selenium/Clients/Boticario.robot
          echo 'teste'

      - name: Run Curl Message To Slack
        run: |
           #robot ./tests/selenium/Helpers/Curl_Slack.robot
           echo 'teste'
        
      - name: Dispatch to workflows
        run: |
            curl -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.TOKEN_OTHER_REPO }}" \
            --request POST \
            --data '{"event_type": "Triggered by API", "client_payload": { "foo": "bar" }}' https://api.github.com/repos/${{ matrix.repo }}/dispatches
